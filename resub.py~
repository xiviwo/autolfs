#!/usr/bin/env python
import re
blfsregx = [

(r"mkdir\s*-v",						"mkdir -pv"),
(r"mkdir\s*/",							"mkdir -pv /"),
(r"mkdir\s*",							"mkdir -pv "),
(r"export\s*LANG=\s*<ll>\s*_\s*<CC>\s*\.\s*<charmap>\s*<@modifiers>",		"export LANG=en_US.utf8"),
(r'"\s*<PREFIX>\s*"',						'"/opt"'),
(r"\s*</path/to/unzipped/files>\s*",				''),
(r'&&$',							''),


class MassRegx:
	def __init__(self, *args, **kwds):
		self.adict = dict(*args, **kwds)
		self.rx = self.make_rx( )

	def make_rx(self):
		print '|'.join(map(re.escape, self.adict))
		#return re.compile('|'.join(map(re.escape, self.adict)),re.VERBOSE)
		return re.compile('|'.join(l for l in self.adict))
	def one_xlat(self, mo):
		print "in one",mo.string

		for k,v in mo.groupdict().iteritems():
		    print k,v
		    if v:
		        sub = getattr(self, k)
		        if callable(sub):
		            return sub(mo)
		        return sub
		raise AttributeError, 'nothing captured, matching sub-regex could not be identified'

	def __call__(self, text):
		#print '_________',text
		print dir(self.one_xlat)
		return self.rx.sub(self.one_xlat, text)


text = "joifijdsjisjdfi nameserver <IP address of your primary nameserver> fjdsjfidsjifjdsfij\nnameserver <IP address of your secondary nameserver>"
dic = { r"nameserver\s*<IP\s*address\s*of\s*your\s*primary" : "nameserver 192.1.2.1",
	r"nameserver\s*<IP\s*address\s*of\s*your\s*secondary\s*nameserver>" : "nameserver 102.11.32.4"
 }


aaa = MassRegx(dic)
print aaa(text)

#print re.compile(r"nameserver\s*<IP\s*address\s*of\s*your\s*primary\s*nameserver>|nameserver\s*<IP\s*address\s*of\s*your\s*secondary\s*nameserver>").sub("nameserver 192.10.20.10",text)



